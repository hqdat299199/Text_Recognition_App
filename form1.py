# Form implementation generated from reading ui file 'form1.ui'
#
# Created by: PyQt6 UI code generator 6.3.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import (QMainWindow, QMessageBox, QFileDialog, QApplication)
from PyQt6.QtGui import QImage
from PIL import Image
import pytesseract
import cv2
import os
import numpy as np
import sys
import os.path

class Ui_MainWindow(QMainWindow,QFileDialog):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(QtCore.QSize(1280, 710))
        MainWindow.setMaximumSize(QtCore.QSize(1280, 710))
        MainWindow.setMinimumSize(QtCore.QSize(1280, 710))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/hoquo/Desktop/icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(0, 10, 571, 511))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.lbpic = QtWidgets.QLabel(self.groupBox)
        self.lbpic.setGeometry(QtCore.QRect(10, 60, 551, 401))
        self.lbpic.setAutoFillBackground(False)
        self.lbpic.setStyleSheet("background-color: lightgray")
        self.lbpic.setText("")
        self.lbpic.setScaledContents(True)
        self.lbpic.setObjectName("lbpic")
        self.lbdophangiai = QtWidgets.QLabel(self.groupBox)
        self.lbdophangiai.setGeometry(QtCore.QRect(350, 470, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lbdophangiai.setFont(font)
        self.lbdophangiai.setText("")
        self.lbdophangiai.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbdophangiai.setObjectName("lbdophangiai")
        self.label4 = QtWidgets.QLabel(self.groupBox)
        self.label4.setGeometry(QtCore.QRect(10, 470, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label4.setFont(font)
        self.label4.setObjectName("label4")
        self.lbpicpath = QtWidgets.QLabel(self.groupBox)
        self.lbpicpath.setGeometry(QtCore.QRect(10, 30, 401, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lbpicpath.setFont(font)
        self.lbpicpath.setObjectName("lbpicpath")
        self.btnpicpath = QtWidgets.QPushButton(self.groupBox)
        self.btnpicpath.setGeometry(QtCore.QRect(420, 20, 41, 41))
        self.btnpicpath.setObjectName("btnpicpath")
        self.btndananh = QtWidgets.QPushButton(self.groupBox)
        self.btndananh.setGeometry(QtCore.QRect(470, 20, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.btndananh.setFont(font)
        self.btndananh.setIconSize(QtCore.QSize(40, 40))
        self.btndananh.setObjectName("btndananh")
        self.btnstart = QtWidgets.QPushButton(self.groupBox)
        self.btnstart.setGeometry(QtCore.QRect(450, 460, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.btnstart.setFont(font)
        self.btnstart.setIconSize(QtCore.QSize(50, 60))
        self.btnstart.setObjectName("btnstart")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(0, 520, 571, 161))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.lbpath = QtWidgets.QLabel(self.groupBox_2)
        self.lbpath.setGeometry(QtCore.QRect(10, 30, 491, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lbpath.setFont(font)
        self.lbpath.setStyleSheet("background-color: lightgreen")
        self.lbpath.setObjectName("lbpath")
        self.btnpath = QtWidgets.QPushButton(self.groupBox_2)
        self.btnpath.setGeometry(QtCore.QRect(510, 30, 41, 31))
        self.btnpath.setToolTip("")
        self.btnpath.setObjectName("btnpath")
        self.nmsharpen = QtWidgets.QSpinBox(self.groupBox_2)
        self.nmsharpen.setGeometry(QtCore.QRect(120, 120, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.nmsharpen.setFont(font)
        self.nmsharpen.setMinimum(1)
        self.nmsharpen.setMaximum(40)
        self.nmsharpen.setObjectName("nmsharpen")
        self.lbdophangiai_5 = QtWidgets.QLabel(self.groupBox_2)
        self.lbdophangiai_5.setGeometry(QtCore.QRect(300, 70, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbdophangiai_5.setFont(font)
        self.lbdophangiai_5.setObjectName("lbdophangiai_5")
        self.cbblur = QtWidgets.QComboBox(self.groupBox_2)
        self.cbblur.setGeometry(QtCore.QRect(460, 70, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.cbblur.setFont(font)
        self.cbblur.setObjectName("cbblur")
        self.lbdophangiai_6 = QtWidgets.QLabel(self.groupBox_2)
        self.lbdophangiai_6.setGeometry(QtCore.QRect(10, 70, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbdophangiai_6.setFont(font)
        self.lbdophangiai_6.setObjectName("lbdophangiai_6")
        self.nmcontrast = QtWidgets.QSpinBox(self.groupBox_2)
        self.nmcontrast.setGeometry(QtCore.QRect(160, 70, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.nmcontrast.setFont(font)
        self.nmcontrast.setMinimum(1)
        self.nmcontrast.setMaximum(255)
        self.nmcontrast.setObjectName("nmcontrast")
        self.lbdophangiai_7 = QtWidgets.QLabel(self.groupBox_2)
        self.lbdophangiai_7.setGeometry(QtCore.QRect(300, 120, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbdophangiai_7.setFont(font)
        self.lbdophangiai_7.setObjectName("lbdophangiai_7")
        self.cbtype = QtWidgets.QComboBox(self.groupBox_2)
        self.cbtype.setGeometry(QtCore.QRect(400, 120, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.cbtype.setFont(font)
        self.cbtype.setObjectName("cbtype")
        self.lbdophangiai_4 = QtWidgets.QLabel(self.groupBox_2)
        self.lbdophangiai_4.setGeometry(QtCore.QRect(10, 120, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lbdophangiai_4.setFont(font)
        self.lbdophangiai_4.setObjectName("lbdophangiai_4")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(580, 10, 701, 671))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.rtbketqua = QtWidgets.QPlainTextEdit(self.groupBox_3)
        self.rtbketqua.setGeometry(QtCore.QRect(10, 30, 681, 631))
        self.rtbketqua.setReadOnly(False)
        self.rtbketqua.setObjectName("rtbketqua")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1280, 27))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.cbblur.addItems(["Mức 1","Mức 3","Mức 5","Mức 7","Mức 9",])
        self.cbtype.addItems(["Trắng","Đen","Khác"])
        self.nmcontrast.setValue(255)
        self.nmsharpen.setValue(7)
        #events
        self.btnpicpath.clicked.connect(self.imagedialog)
        self.btndananh.clicked.connect(self.pasteimg)
        self.btnstart.clicked.connect(self.start)
        self.btnpath.clicked.connect(self.pathdialog)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Nhận diện văn bản"))
        self.groupBox.setTitle(_translate("MainWindow", "Ảnh đầu vào"))
        self.label4.setText(_translate("MainWindow", "Kích thước ảnh:"))
        self.lbpicpath.setText(_translate("MainWindow", "..."))
        self.btnpicpath.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Chọn đường dẫn đến ảnh cần nhận dạng văn bản.</span></p></body></html>"))
        self.btnpicpath.setText(_translate("MainWindow", "..."))
        self.btndananh.setText(_translate("MainWindow", "Dán ảnh"))
        self.btnstart.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Bắt đầu nhận diện</span></p></body></html>"))
        self.btnstart.setText(_translate("MainWindow", "Nhận diện"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Tùy chỉnh thông số"))
        self.lbpath.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Chọn đường dẫn đến thư mục cài đặt Tesseract-OCR nhằm truy cập vào các thư viện cần thiết cho việc nhận diện văn bản.</span></p></body></html>"))
        self.lbpath.setText(_translate("MainWindow", "C:\Program Files\Tesseract-OCR"))
        self.btnpath.setText(_translate("MainWindow", "..."))
        self.nmsharpen.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Điều chỉnh độ sắc nét của ảnh đầu vào nhằm nhận diện văn bản được tối ưu hơn trong trường hợp ảnh bị mờ.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Tối thiểu là mức 1 và tối đa là mức 40.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Mặc định từ mức 5 đến mức 10 cho kết quả nhận diện tốt nhất trong hầu hết trường hợp.</span></p></body></html>"))
        self.lbdophangiai_5.setText(_translate("MainWindow", "Lọc mờ khử nhiễu:"))
        self.cbblur.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Làm mượt ảnh đầu vào nhằm khử nhiễu (các vệt sáng, vết mực,...) để cho kết quả nhận diện văn bản được tối ưu nhất.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Tối thiểu là 1 và tối đa là 9.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Mặc định ở mức 1 hoặc 3 cho kết quả nhận diện tốt nhất trong hầu hết trường hợp.</span></p></body></html>"))
        self.lbdophangiai_6.setText(_translate("MainWindow", "Độ tương phản:"))
        self.nmcontrast.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Điều chỉnh độ tương phản nhằm nhận diện ảnh tối ưu nhất trong trường hợp ảnh bị quá sáng.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Tối thiểu là 1 và tối đa là 255.</span></p><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Mặc định ở mức tối đa 255 cho kết quả nhận diện tốt nhất trong hầu hết trường hợp.</span></p></body></html>"))
        self.lbdophangiai_7.setText(_translate("MainWindow", "Loại ảnh:"))
        self.cbtype.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"justify\"><span style=\" font-size:10pt; font-weight:600;\">Tùy vào nền của ảnh có màu nào phần mềm sẽ áp dụng thuật toán xử lí ảnh phù hợp nhằm nhận diện văn bản được tối ưu nhất.</span></p></body></html>"))
        self.lbdophangiai_4.setText(_translate("MainWindow", "Độ sắc nét:"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Kết quả nhận diện"))
        self.rtbketqua.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Nơi hiển thị kết quả nhận diện văn bản.</span></p></body></html>"))

    def pasteimg(self):
        cb = QApplication.clipboard()
        md = cb.mimeData()
        if md.hasImage():
            img = QImage(md.imageData())
            img.save("temp.png","PNG")
            self.lbpic.setPixmap(QtGui.QPixmap(img))
            self.lbpicpath.setText("Clipboard")
            img1 = cv2.imread("temp.png", flags=cv2.IMREAD_COLOR)
            self.lbdophangiai.setText(str(img1.shape[0]) + "x" + str(img1.shape[1]))
        else:
            QMessageBox.information(self, "Lỗi đọc ảnh!", "Không tìm thấy ảnh nào đã copy trước đó vào clipboard")
    #Lấy ảnh từ máy
    def imagedialog(self):
        global imgname
        imgname = QFileDialog.getOpenFileName(self, 'Open file', 'C:\\Users\\hoquo\\Desktop',"Image files (*.jpg *.png *.bmp)")
        if(imgname != ('','')):
            with open(imgname[0]) as f:
                self.lbpicpath.setText(str(imgname[0]))#get đường dẫn ảnh
                self.lbpic.setPixmap(QtGui.QPixmap(imgname[0]))#set ảnh vào khung
                img1 = cv2.imread(imgname[0], flags=cv2.IMREAD_COLOR)
                self.lbdophangiai.setText(str(img1.shape[0]) + "x" + str(img1.shape[1]))
            
    #Lấy đường dẫn Tesseract-OCR
    def pathdialog(self):
        pathname = QFileDialog.getExistingDirectory(self,"Chọn đường dẫn")
        if(pathname != ""):
            if(os.path.exists(pathname + "\\tesseract.exe")) == True:
                self.lbpath.setText(pathname)        
            else: 
                QMessageBox.information(self,"Lỗi đọc file","Đường dẫn không hợp lệ!\nKhông tìm thấy file tesseract.exe")
        elif(self.lbpath.text() == ""):
            self.lbpath.setText("Đường dẫn đến thư mục cài đặt Tesseract-OCR")
    #Bắt đầu nhận diện
    def start(self):
        #Đọc ảnh
        pytesseract.pytesseract.tesseract_cmd = self.lbpath.text() + "\\tesseract.exe"
        if(self.lbpicpath.text() == "..."): QMessageBox.information(self,"Lỗi đọc ảnh","Không tìm thấy ảnh!\nVui lòng dán ảnh vào để tiếp tục.")
        elif(self.lbpath.text() == "Đường dẫn đến thư mục cài đặt Tesseract-OCR"): QMessageBox.information(self,"Lỗi thư viện","Đường dẫn đến thư viện không hợp lệ.\nKhông thể tìm thấy file tesseract.exe")
        else:
            pathname = self.lbpath.text()
            if(os.path.exists(pathname + "\\tesseract.exe")) == True: 
                self.lbpath.setText(pathname)
                if(self.lbpicpath.text() == "Clipboard"): img1 = cv2.imread("temp.png")
                else: img1 = cv2.imread(imgname[0], flags=cv2.IMREAD_COLOR)
                #Lấy thông số độ sắc nét
                sharp = self.nmsharpen.value()
                #Lấy thông số lọc mờ
                blur = self.cbblur.currentIndex()
                if(blur == 0): numblur = int(1)
                elif(blur == 1): numblur = int(3)
                elif(blur == 2): numblur = int(5)
                elif(blur == 3): numblur = int(7)
                elif(blur == 4): numblur = int(9)
                #Lấy thông số độ tương phản
                contrast = self.nmcontrast.value()
                #Lấy thông số độ tương phản
                img_type = self.cbtype.currentIndex()
                #Lấy kích thước ảnh
                w = img1.shape[1]
                h = img1.shape[0]
                #Điều chỉnh kích thước ảnh về mức vừa phải tối ưu cho nhận diện
                if(w < 200 and h <200 ):
                    if(w > h):
                        width = int(img1.shape[1]*135/100)
                        height = int(img1.shape[0]*150/100)
                    else:
                        width = int(img1.shape[1]*150/100)
                        height = int(img1.shape[0]*135/100)
                elif(w > 1000 and h > 1000):
                    if(w > h):
                        width = int(img1.shape[1]*60/100)
                        height = int(img1.shape[0]*45/100)
                    else:
                        width = int(img1.shape[1]*45/100)
                        height = int(img1.shape[0]*60/100)
                else:
                    width = w
                    height = h
                img_resized = cv2.resize(img1, (width,height), interpolation=cv2.INTER_AREA)
                
                #Lọc mượt ảnh 1 (tùy chọn)
                kernel = np.array([ [0, -1, 0],
                                    [-1, sharp,-1],
                                    [0, -1, 0]  ])
                image_sharp1 = cv2.filter2D(img_resized, ddepth=-(sharp), kernel=kernel)
                #Nếu ảnh nền sáng:
                if(img_type == 0 or img_type == 2): gray = cv2.cvtColor(image_sharp1, cv2.COLOR_BGR2GRAY)
                #Nếu ảnh nền tối:
                elif(img_type == 1):
                    inverse = cv2.bitwise_not(image_sharp1)
                    gray = cv2.cvtColor(inverse, cv2.COLOR_BGR2GRAY)
                #Lọc mờ giảm nhiễu (tùy chọn)
                img_blur = cv2.medianBlur(gray,numblur)
                #Điều chỉnh ngưỡng threshold (phân tách trắng đen)
                thres = cv2.threshold(img_blur, 0, contrast, cv2.THRESH_BINARY | cv2.THRESH_OTSU)[1]
                #Làm mượt ảnh 2
                kernel = np.array([ [0, -1, 0],
                                    [-1, 5,-1],
                                    [0, -1, 0]  ])
                image_sharp2 = cv2.filter2D(thres, ddepth=-5, kernel=kernel)
                cv2.imshow("win",image_sharp2)
                # Ghi tạm ảnh xuống ổ cứng để sau đó apply OCR
                filename = "{}.png".format(os.getpid())
                cv2.imwrite(filename, image_sharp2)
                # Load ảnh và apply nhận dạng bằng Tesseract OCR
                text = pytesseract.image_to_string(Image.open(filename), lang='vie')
                # Xóa ảnh tạm sau khi nhận dạng
                os.remove(filename)
                # In dòng chữ nhận dạng được
                if text == "" : self.rtbketqua.setPlainText("Không thể nhận dạng được chữ nào!\nVui lòng chỉnh lại thông số ảnh và thử lại!")
                else:
                    #Loại bỏ khoảng cách dài (nếu có)
                    text1 = str(text).lstrip()
                    text2 = str(text1).replace("  "," ")
                    #In ra plaintext
                    self.rtbketqua.setPlainText(text2)    
            else: QMessageBox.information(self,"Lỗi đọc file","Đường dẫn không hợp lệ!\nKhông tìm thấy file tesseract.exe")
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
